This dataset contains information about a set of families living in Florence during the Middle Ages. The setup.py file uses the data in florentine_families_relations_matrix_sample.csv to create the desired count matrices, given the desired
attributes.

The number of family connections (edges) is 448, distributed among 9 different attributes. The attributes are: ['marriage', 'business', 'partnerships', 'bankemployment', 'realestate', 'patronage', 'loan', 'friendship', 'mallevadori']. The relative frequences (in order) are: [157 58 29 14 12 44 87 17 31]. The total number of family names appearing at least once is 88. The number of times each of the families appears is [  4  13  24   3  11  20   3   1   4  15  18  38   5   2   2  10   9  14   2   6   7   4   4   5   7   5  23  10   2   5   3   2  12   4   9   3   3   3  12   7   1   8   2   5   2   8  17   9   8  10  18  28  11   1   1  15  12  14 128  10  15   7   8   3   4  35   3   1  20   4  17  10   2   5  13   5   3   5   6   1   7   9  45   7   1   6   1  13].

If using attributes 'marriage' and 'loan' only, then the following families constitute a connected subset for both attributes: ['Adimari', 'Ardinghelli', 'Arrigucci', 'Baldovinetti', 'Barbadori', 'Bardi', 'Bischeri', 'Brancacci', 'Busini', 'Castellani', 'Cavalcanti', 'Ciai', 'Corbinelli', 'Da Uzzano', 'Degli Agli', 'Del Forese', 'Della Casa', 'Fioravanti', 'Gianfigliazzi', 'Ginori', 'Giugni', 'Guadagni', 'Guicciardini', 'Lamberteschi', 'Manelli', 'Manovelli', 'Medici', 'Panciatichi', 'Pandolfini', 'Pazzi', 'Pecori', 'Peruzzi', 'Ricasoli', 'Rondinelli', 'Rossi', 'Salviati', 'Scambrilla', 'Serragli', 'Serristori', 'Spini', 'Strozzi', 'Tornabuoni']. Ouf of these families, 'Baldovinetti' contains the most 'business' connections within the group. 

The function setup.find_families() finds the subset of families that share all specified attributes of interest. For the 3 attributes these are ['Adimari', 'Ardinghelli', 'Arrigucci', 'Baldovinetti', 'Barbadori', 'Bardi', 'Bencivenni', 'Bischeri', 'Brancacci', 'Castellani', 'Cavalcanti', 'Da Uzzano', 'Della Casa', 'Guicciardini', 'Lamberteschi', 'Manelli', 'Manovelli', 'Medici', 'Orlandini', 'Panciatichi', 'Pazzi', 'Peruzzi', 'Ricasoli', 'Rondinelli', 'Rossi', 'Serragli', 'Serristori', 'Spini', 'Strozzi', 'Tornabuoni'].

If we remove the sole points for marriage we get ['Adimari', 'Ardinghelli', 'Arrigucci', 'Baldovinetti', 'Barbadori', 'Bardi', 'Bischeri', 'Brancacci', 'Castellani', 'Cavalcanti', 'Da Uzzano', 'Della Casa', 'Guicciardini', 'Manelli', 'Manovelli', 'Medici', 'Panciatichi', 'Peruzzi', 'Ricasoli', 'Rondinelli', 'Rossi', 'Serragli', 'Serristori', 'Spini', 'Strozzi', 'Tornabuoni']

The function setup.connected_components() finds the largest possible set of families that form a connected graph for each of the attributes in the list. For the attributes 'marriage', 'business', and 'loan' these families are ['Adimari', 'Ardinghelli', 'Baldovinetti', 'Bardi', 'Brancacci', 'Castellani', 'Cavalcanti', 'Da Uzzano', 'Della Casa', 'Guicciardini', 'Manelli', 'Manovelli', 'Rondinelli', 'Rossi', 'Serragli', 'Spini'].